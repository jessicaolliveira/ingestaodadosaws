import sys
from awsglue.transforms import *
from awsglue.utils import getResolvedOptions
from pyspark.context import SparkContext
from awsglue.context import GlueContext
from awsglue.job import Job
from awsglue import DynamicFrame


def sparkSqlQuery(glueContext, query, mapping, transformation_ctx) -> DynamicFrame:
    for alias, frame in mapping.items():
        frame.toDF().createOrReplaceTempView(alias)
    result = spark.sql(query)
    return DynamicFrame.fromDF(result, glueContext, transformation_ctx)


args = getResolvedOptions(sys.argv, ["JOB_NAME"])
sc = SparkContext()
glueContext = GlueContext(sc)
spark = glueContext.spark_session
job = Job(glueContext)
job.init(args["JOB_NAME"], args)

# Script generated for node Person
Person_node1688336424501 = glueContext.create_dynamic_frame.from_catalog(
    database="brutos_caserox",
    table_name="person_person_csv",
    transformation_ctx="Person_node1688336424501",
)

# Script generated for node SalesSalesOrderHeader
SalesSalesOrderHeader_node1688339320812 = glueContext.create_dynamic_frame.from_catalog(
    database="brutos_caserox",
    table_name="sales_salesorderheader_csv",
    transformation_ctx="SalesSalesOrderHeader_node1688339320812",
)

# Script generated for node SalesCustomer
SalesCustomer_node1688337910133 = glueContext.create_dynamic_frame.from_catalog(
    database="brutos_caserox",
    table_name="sales_customer_csv",
    transformation_ctx="SalesCustomer_node1688337910133",
)

# Script generated for node SQL Query
SqlQuery0 = """
SELECT p.FirstName + ' ' + p.LastName AS CustomerName, COUNT(soh.SalesOrderID) AS OrderCount
FROM Person p
INNER JOIN SalesCustomer c ON p.BusinessEntityID = c.CustomerID
INNER JOIN SalesSalesOrderHeader soh ON c.CustomerID = soh.CustomerID
GROUP BY p.FirstName, p.LastName;
"""
SQLQuery_node1688338759786 = sparkSqlQuery(
    glueContext,
    query=SqlQuery0,
    mapping={
        "myDataSource": Person_node1688336424501,
        "myDataSource": SalesCustomer_node1688337910133,
        "myDataSource": SalesSalesOrderHeader_node1688339320812,
    },
    transformation_ctx="SQLQuery_node1688338759786",
)

job.commit()


job.commit()
